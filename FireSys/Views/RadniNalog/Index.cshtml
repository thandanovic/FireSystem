@model IEnumerable<FireSys.Entities.RadniNalog>
@using FireSys.Models;
@{
    ViewBag.Title = "Radni nalozi";
    Layout = "~/Views/Shared/_Layout.cshtml";

    RadniNalogViewModel radniNalogModel = new RadniNalogViewModel();
}

<script type="text/javascript">
    var selectedIDs;

    function OnSelectionChanged(s, e) {
        s.GetSelectedFieldValues("RadniNalogId", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {
        //Capture all selected keys
        selectedIDs = values.join(',');
    }

    function UObradiClick(s, e) {
        mySpinner(true);
        setTimeout(function () {
            $.ajax({
                url: "@Url.Action("ChangeStatus", "RadniNalog")",
                data: { IDs: selectedIDs, status: 1 },
                method: "POST",
                dataType: "json"
            }).done(function (response) {
                window.location.reload();
                mySpinner(false);
            });

        }, 2000);

    }

    function ZavrsenClick(s, e) {
        mySpinner(true);
        setTimeout(function () {
            $.ajax({
                url: "@Url.Action("ChangeStatus", "RadniNalog")",
                data: { IDs: selectedIDs, status: 2 },
                method: "POST",
                dataType: "json"
            }).done(function (response) {
                window.location.reload();
                mySpinner(false);
            });

        }, 2000);
    }
    function OnClick(s, e) {
        var actionParams = $("form").attr("action").split("?OutputFormat=");
        actionParams[1] = s.GetMainElement().getAttribute("OutputFormatAttribute");
        $("form").attr("action", actionParams.join("?OutputFormat="));
    }

    var commandName;
    function GridBeginCallback(s, e) {
        commandName = e.commandName;
        //Pass all selected keys to GridView callback action
        e.customArgs["selectedIDs"] = selectedIDs;
    }

    function GridEndCallback(s, e) {
        console.log(commandName);
        commandName = null;
    }

    var globalSender = null;

    function documentViewer_Init(sender, e) {
        //var scaleFactorEditor = sender.GetToolbar().GetItemTemplateControl("ScaleFactor");
        //scaleFactorEditor.SetValue("100");
        //sender.Refresh();
        //sender.previewModel.reportPreview.zoom(1);
        //sender.previewModel.reportPreview.previewVisible();
        //globalSender = sender;

        $('.dxrd-image-search').trigger('click')


        $('.dxrd-right-panel-collapse-image').trigger('click')
    }

    function documentViewer_ToolbarItemValueChanged(sender, e) {
        document.getElementById('Scale').value = e.editor.GetValue();
        sender.Refresh();
    }

    function deleteRow() {
        var txt;
        var r = confirm("Da li zelite obrisati?");
        if (r == true) {
            return true;
        } else {
            return false;
        }
    }

    $(function () {
        $('.print-report').on('click', function () {
            var dataUrl = $(this).attr('data-url');
            var dataID = $(this).attr('data-id');

            $.ajax({
                url: dataUrl,
                data: { id: dataID },
                dataType: 'json',
                type: "POST",
                beforeSend: function () {

                },
                complete: function () {

                },
                success: function (data) {
                    $('#modal_report_body').html(data.content);
                    //$('#modal_report').modal('show');
                }
            });



        });
    });




    $(document).ready(function () {
        if (window.location.search.substring(1) == "create=1") {
            $("#radni_nalog_modal").modal('show');
        }

        $('#radni_nalog_modal').on('shown.bs.modal', function (e) {

        })
        $('#radni_nalog_modal').on('hidden.bs.modal', function () {

        })
    });

    function OnCreateClick(s, e) {
        $("#radni_nalog_modal").modal('show');
    }

</script>

@using (Html.BeginForm("ExportTo", "RadniNalog"))
{
    <div class="action-container margin-bottom-20 pull-right">
        <table>
            <tr>
                <td>
                    @*@Html.ActionLink("Kreiraj novog klijenta", "Create", null, new { @class = "btn btn-primary" })*@
                    @Html.DevExpress().Button(btn =>
               {
                   btn.Name = "btnNewRadniNalog";
                   btn.Text = "Kreiraj novi radni nalog";
                   //  btn.RouteValues = new { Controller = "RadniNalog", Action = "Create", ParamValue = "" };
                   btn.ControlStyle.CssClass = "create-button";
                   btn.ClientSideEvents.Click = "OnCreateClick";
               }).GetHtml()
                </td>
                <td>
                    @Html.DevExpress().Button(settings =>
               {
                   settings.Name = "btnUObradi";
                   settings.Text = "U obradi";
                   settings.ControlStyle.CssClass = "yellowButton";
                   settings.ClientSideEvents.Click = "UObradiClick";
               }).GetHtml()
                </td>
                <td>
                    @Html.DevExpress().Button(settings =>
               {
                   settings.Name = "btnZavrsen";
                   settings.Text = "Završen";
                   settings.ControlStyle.CssClass = "greenButton";
                   settings.ClientSideEvents.Click = "ZavrsenClick";
               }).GetHtml()
                </td>
                <td>
                    @Html.DevExpress().Button(btn =>
           {
               btn.Name = "btnExportToPDF";
               btn.Attributes["OutputFormatAttribute"] = "PDF";
               btn.Text = "PDF";
               btn.UseSubmitBehavior = true;
               btn.ClientSideEvents.Click = "OnClick";
               btn.ControlStyle.CssClass = "export-button";
           }).GetHtml()
                </td>
                <td>
                    @Html.DevExpress().Button(btn =>
           {
               btn.Name = "btnExportToXLSX";
               btn.Attributes["OutputFormatAttribute"] = "XLSX";
               btn.Text = "EXCEL";
               btn.UseSubmitBehavior = true;
               btn.ClientSideEvents.Click = "OnClick";
               btn.ControlStyle.CssClass = "export-button";
           }).GetHtml()
                </td>
            </tr>
        </table>
    </div>

    <br />


    @Html.Partial("RadniNalogGridView", Model)




}
<div id="radni_nalog_modal" class="modal fade min-height-300" role="dialog">
    <form id="radni_nalog_form" data-selected-id="" action="/RadniNalog/Create" method="post">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Novi radni nalog</h4>
                </div>
                <div class="modal-body">
                    @Html.Partial("_Details", radniNalogModel)
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Zatvori</button>
                    <button type="submit" class="btn btn-danger">Kreiraj</button>
                </div>
            </div>

        </div>
    </form>
</div>